name: Docker deploy

on:
    push:
        branches: ['main']

jobs:
    build:
        runs-on: arm-ubuntu-22-image
        environment: devolution-studio

        strategy:
            matrix:
                node-version: [22.x]

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Installation des dépendances
              run: npm install

            - name: Build du projet Typescript
              run: |
                  npm run build
                  cp ./package.json ./dist/
                  cp ./package-lock.json ./dist/

            - name: Fichier env
              run: |
                  echo "DEBUG=false" >> ./dist/.env
                  echo "APP_ID=${{ secrets.APP_ID }}" >> ./dist/.env
                  echo "CLIENT_TOKEN=${{ secrets.CLIENT_TOKEN }}" >> ./dist/.env
                  echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> ./dist/.env
                  echo "GROQ_API_MODEL=${{ secrets.GROQ_API_MODEL }}" >> ./dist/.env

            - name: Tests unitaires
              run: npm run test

            - name: Déploiement
              uses: easingthemes/ssh-deploy@main
              with:
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                  ARGS: '-rlgoDzvc -i'
                  SOURCE: 'dist/'
                  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
                  REMOTE_USER: ${{ secrets.REMOTE_USER }}
                  TARGET: ${{ secrets.REMOTE_TARGET }}
                  EXCLUDE: '/node_modules/'
                  SCRIPT_AFTER: |
                      export PATH=$PATH:${{ secrets.REMOTE_NODE_BIN_FOLDER }}
                      cd ${{ secrets.REMOTE_TARGET }}
                      git pull
                      docker compose down
                      npm i
                      docker compose build
                      docker compose up -d
